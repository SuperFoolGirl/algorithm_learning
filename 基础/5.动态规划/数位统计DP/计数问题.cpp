// 338
// 对于区间问题，经常用到前缀和相减的思想
// 需要得到区间 [l, r] 的某个属性的和，可以用 s[r] - s[l - 1] 来表示
// 实现count(n, x)函数，查询1-n中数字x出现的次数
// 则a-b中x出现的次数为count(b, x) - count(a - 1, x)，这正是前缀和思想的体现

// 下面以x=1为例，讲解count(n, 1)的实现
// 1. 取得n的位数，即得到需要统计的数字的最大位数
// 2. 计算每一位中1出现的次数。例如n为7位，分别计算1-7位上1出现的次数
// 3. 计算方法，以求1在第4位出现的次数为例。设n为abcdefg，待计算的数为xxx1yyy
//    对于1 <= xxx1yyy <= abcdefg ：
//    1. 000 <= xxx <= abc - 1，此时y可以取遍000~999，1出现的次数为1000*abc（只算第4位，别的位出现1不关注。1000是因为y有1000种取法，1000-1999，abc是因为xxx有abc种取法）
//    2. xxx == abc
//       2.1 d < 1，则abc1efg < abcdefg，不在讨论范围内
//       2.2 d == 1，则y可以取000~efg，1出现的次数为efg + 1
//       2.3 d > 1，则y可以取000~999，1出现的次数为1000（同上，1000-1999中，第四位的1共出现1000次）
//    注意，这里有一个特例，就是0的情况
//    当枚举0时，不允许有前导0，最高位要从1开始。对于xxx0yyy来说，xxx不能从000开始取
